/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algoritmos;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author EZEA2
 */
public class GUIGrafico extends javax.swing.JFrame {

    /**
     * Creates new form GUIGrafico
     */
    
    String datos[][];
    
    public GUIGrafico(String _datos[][]) {
        initComponents();
        FlatLightLaf.setup();
        setLocationRelativeTo(null);
        
        datos=new String[5][7];
        for(int i=0;i<5;i++){
            System.arraycopy(_datos[i], 0, datos[i], 0, 7);
        }
        
        DefaultCategoryDataset dod = new DefaultCategoryDataset();
        for(int i=0;i<7;i++){
            if(datos[1][i]!=null) dod.setValue(Double.parseDouble(datos[2][i]),"Comparaciones",datos[0][i]);   
        }
        
        JFreeChart jchart = ChartFactory.createBarChart("Rendimiento","Algoritmos","Cantidad de comparaciones",dod,PlotOrientation.VERTICAL,true,true,false);
        
        CategoryPlot plot = jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.gray);
        
        ChartFrame chartFrm = new ChartFrame("Rendimiento",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(600, 600);
        
        ((BarRenderer)plot.getRenderer()).setBarPainter(new StandardBarPainter());

        BarRenderer r = (BarRenderer)jchart.getCategoryPlot().getRenderer();
        r.setSeriesPaint(0, Color.red);
        
        ChartPanel chartPanel = new ChartPanel(jchart);
        panelResultadosComp.removeAll();
        panelResultadosComp.add(chartPanel);
        panelResultadosComp.updateUI();
        
        //
        
        dod = new DefaultCategoryDataset();
        for(int i=0;i<7;i++){ 
            if(datos[1][i]!=null) dod.setValue(Double.parseDouble(datos[1][i]),"Tiempo",datos[0][i]);
        }
        
        jchart = ChartFactory.createBarChart("Rendimiento","Algoritmos","Tiempo [s]",dod,PlotOrientation.VERTICAL,true,true,false);
        
        plot = jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.gray);
        
        chartFrm = new ChartFrame("Rendimiento",jchart,true);
        chartFrm.setVisible(true);
        chartFrm.setSize(600, 600);
        
        ((BarRenderer)plot.getRenderer()).setBarPainter(new StandardBarPainter());

        r = (BarRenderer)jchart.getCategoryPlot().getRenderer();
        r.setSeriesPaint(0, Color.blue);
        
        chartPanel = new ChartPanel(jchart);
        panelResultadosTiempo.removeAll();
        panelResultadosTiempo.add(chartPanel);
        panelResultadosTiempo.updateUI();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        panelResultadosComp = new javax.swing.JPanel();
        btnCerrar = new javax.swing.JButton();
        panelResultadosTiempo = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Grafica de resultados");

        panelResultadosComp.setBorder(btnCerrar.getBorder());
        panelResultadosComp.setFocusable(false);

        javax.swing.GroupLayout panelResultadosCompLayout = new javax.swing.GroupLayout(panelResultadosComp);
        panelResultadosComp.setLayout(panelResultadosCompLayout);
        panelResultadosCompLayout.setHorizontalGroup(
            panelResultadosCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelResultadosCompLayout.setVerticalGroup(
            panelResultadosCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        panelResultadosTiempo.setBorder(btnCerrar.getBorder());
        panelResultadosTiempo.setFocusable(false);

        javax.swing.GroupLayout panelResultadosTiempoLayout = new javax.swing.GroupLayout(panelResultadosTiempo);
        panelResultadosTiempo.setLayout(panelResultadosTiempoLayout);
        panelResultadosTiempoLayout.setHorizontalGroup(
            panelResultadosTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
        );
        panelResultadosTiempoLayout.setVerticalGroup(
            panelResultadosTiempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCerrar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(panelResultadosTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelResultadosComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(panelResultadosComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelResultadosTiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        //dispose();
        panelResultadosTiempo.updateUI();
    }//GEN-LAST:event_btnCerrarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelResultadosComp;
    private javax.swing.JPanel panelResultadosTiempo;
    // End of variables declaration//GEN-END:variables
}
